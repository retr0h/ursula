---
# It is recommended that this role be played with serial set to 1 because
# There is a bug with initializing multiple nodes in the HA cluster at once
# http://rabbitmq.1065348.n5.nabble.com/Rabbitmq-boot-failure-with-quot-tables-not-present-quot-td24494.html

- name: add controllers to /etc/hosts
  lineinfile: >
    dest=/etc/hosts regexp='.*{{ hostvars[item]['ansible_hostname'] }}$'
    line='{{ hostvars[item]["ansible_eth0"]["ipv4"]["address"] }} {{ hostvars[item]['ansible_hostname'] }}'
  with_items: groups["controller"]

- name: add erlang-solutions apt key
  apt_key: >
    url='http://binaries.erlang-solutions.com/debian/erlang_solutions.asc'

- name: add erlang-solutions apt repository
  apt_repository: >
    repo='deb http://packages.erlang-solutions.com/debian precise contrib'
    update_cache=yes

- name: install erlang-solutions erlang
  apt: pkg=esl-erlang

- name: add rabbitmq apt key
  apt_key: >
    url='http://www.rabbitmq.com/rabbitmq-signing-key-public.asc'

- name: add rabbitmq apt repository
  apt_repository: >
    repo='deb http://www.rabbitmq.com/debian/ testing main'
    update_cache=yes

- name: install rabbitmq
  apt: pkg=rabbitmq-server

- name: add rabbitmq erlang cookie
  template: >
    src=var/lib/rabbitmq/erlang.cookie dest=/var/lib/rabbitmq/.erlang.cookie
    owner=rabbitmq group=rabbitmq mode=0400
  register: erlang_cookie

- name: add rabbitmq environment configuration
  template: >
    src=etc/rabbitmq/rabbitmq-env.conf dest=/etc/rabbitmq/rabbitmq-env.conf
    owner=root group=root mode=0644
  register: cluster_configuration

- name: add rabbitmq cluster configuration
  template: >
    src=etc/rabbitmq/rabbitmq.config dest=/etc/rabbitmq/rabbitmq.config
    owner=root group=root mode=0644
  register: cluster_configuration

# When rabbitmq starts it creates  '/var/lib/rabbitmq/mnesia'. This dir
# should be deleted before clustering is setup because it retains data that
# can conflict with the clustering information.
- name: remove mnesia configuration
  file: path=/var/lib/rabbitmq/mnesia state=absent
  when: erlang_cookie.changed or cluster_configuration.changed

- name: stop rabbit cluster
  service: name=rabbitmq-server state=stopped
  when: erlang_cookie.changed or cluster_configuration.changed

  # In case there are lingering processes, ignore errors silently
- name: send sigterm to any running rabbitmq processes
  shell: killall -u rabbitmq || true
  when: erlang_cookie.changed or cluster_configuration.changed

- name: start rabbitmq
  service: name=rabbitmq-server state=started

- name: wait for rabbit to start
  wait_for: >
    port={{ rabbitmq_port }}
    host={{ ansible_eth0["ipv4"]["address"] }}
    delay=2

- name: set the HA mirror queues policy
  rabbitmq_policy: name=HA
                   node={{ rabbitmq_nodename }}
                   pattern='.*'
                   tags=ha-mode=all
